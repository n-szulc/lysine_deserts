# A treemap R script produced by the Revigo server at http://revigo.irb.hr/
# If you found Revigo useful in your work, please cite the following reference:
# Supek F et al. "REVIGO summarizes and visualizes long lists of Gene Ontology
# terms" PLoS ONE 2011. doi:10.1371/journal.pone.0021800
# author: Anton Kratz <anton.kratz@gmail.com>, RIKEN Omics Science Center, Functional Genomics Technology Team, Japan
# created: Fri, Nov 02, 2012  7:25:52 PM
# last change: Fri, Nov 09, 2012  3:20:01 PM
# -----------------------------------------------------------------------------
# If you don't have the treemap package installed, uncomment the following line:
# install.packages( "treemap" );
library(treemap) 								# treemap package by Martijn Tennekes
# Set the working directory if necessary
# setwd("C:/Users/username/workingdir");
# --------------------------------------------------------------------------
# Here is your data from Revigo. Scroll down for plot configuration options.
revigo.names <- c("term_ID","description","frequency","value","uniqueness","dispensability","representative");
revigo.data <- rbind(c("GO:0000976","transcription cis-regulatory region binding",8.42579369438647,9.13632546499485,0.1235253261286,0,"transcription cis-regulatory region binding"),
c("GO:0001067","transcription regulatory region nucleic acid binding",8.43677908381852,9.11395543813757,0.349622394216842,0.47767123,"transcription cis-regulatory region binding"),
c("GO:0140110","transcription regulator activity",10.6832912226738,7.4185887347609,1,0,"transcription regulator activity"));
stuff <- data.frame(revigo.data);
names(stuff) <- revigo.names;
stuff$value <- as.numeric( as.character(stuff$value) );
stuff$frequency <- as.numeric( as.character(stuff$frequency) );
stuff$uniqueness <- as.numeric( as.character(stuff$uniqueness) );
stuff$dispensability <- as.numeric( as.character(stuff$dispensability) );
# by default, outputs to a PDF file
pdf( file="revigo_treemap.pdf", width=16, height=9 ) # width and height are in inches
# check the tmPlot command documentation for all possible parameters - there are a lot more
treemap(
stuff,
index = c("representative","description"),
vSize = "value",
type = "categorical",
vColor = "representative",
title = "",
inflate.labels = FALSE,      # set this to TRUE for space-filling group labels - good for posters
lowerbound.cex.labels = 0,   # try to draw as many labels as possible (still, some small squares may not get a label)
bg.labels = "#CCCCCCAA",   # define background color of group labels
# "#CCCCCC00" is fully transparent, "#CCCCCCAA" is semi-transparent grey, NA is opaque
position.legend = "none",
fontsize.labels = 30
)
dev.off()
